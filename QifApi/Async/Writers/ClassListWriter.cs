//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using System.IO;
using Hazzik.Qif.Transactions;
using Hazzik.Qif.Transactions.Fields;

namespace Hazzik.Qif.Writers
{
    using System.Threading.Tasks;
    static partial class ClassListWriter
    {
        internal static async Task WriteAsync(TextWriter writer, ICollection<ClassListTransaction> list)
        {
            if (list != null && list.Count > 0)
            {
                await (writer.WriteLineAsync(Headers.ClassList)).ConfigureAwait(true);

                foreach (var item in list)
                {
                    if (!string.IsNullOrEmpty(item.ClassName))
                    {
                        await (writer.WriteAsync(ClassListFields.ClassName)).ConfigureAwait(true);
                        await (writer.WriteLineAsync(item.ClassName)).ConfigureAwait(true);
                    }

                    if (!string.IsNullOrEmpty(item.Description))
                    {
                        await (writer.WriteAsync(ClassListFields.Description)).ConfigureAwait(true);
                        await (writer.WriteLineAsync(item.Description)).ConfigureAwait(true);
                    }

                    await (writer.WriteLineAsync(InformationFields.EndOfEntry)).ConfigureAwait(true);
                }
            }
        }
    }
}
